{"version":3,"names":[],"mappings":"","sources":["pages/dashboard/kpi.js"],"sourcesContent":["'use strict';\nvar TI_KPI = function () {\n    var getOrCreateLegendList = (chart, id) => {\n        const legendContainer = document.getElementById(id);\n        let listContainer = legendContainer.querySelector('ul');\n      \n        if (!listContainer) {\n          listContainer = document.createElement('ul');\n          listContainer.style.display = 'flex';\n          listContainer.style.flexDirection = 'column';\n          listContainer.style.margin = 0;\n          listContainer.style.padding = 0;\n      \n          legendContainer.appendChild(listContainer);\n        }\n      \n        return listContainer;\n      };\n      var htmlLegendPlugin = {\n        id: 'htmlLegend',\n        afterUpdate(chart, args, options) {\n          const ul = getOrCreateLegendList(chart, options.containerID);\n    \n          // Remove old legend items\n          while (ul.firstChild) {\n            ul.firstChild.remove();\n          }\n    \n          // Reuse the built-in legendItems generator\n          const items = chart.options.plugins.legend.labels.generateLabels(chart);\n    \n          items.forEach(item => {\n            const li = document.createElement('li');\n            li.style.alignItems = 'center';\n            li.style.cursor = 'pointer';\n            li.style.display = 'flex';\n            li.style.flexDirection = 'row';\n            li.style.marginLeft = '10px';\n            li.style.marginBottom = '10px';\n            li.className = 'fs-4';\n    \n            li.onclick = () => {\n              const {type} = chart.config;\n              if (type === 'pie' || type === 'doughnut') {\n                // Pie and doughnut charts only have a single dataset and visibility is per item\n                chart.toggleDataVisibility(item.index);\n              } else {\n                chart.setDatasetVisibility(item.datasetIndex, !chart.isDatasetVisible(item.datasetIndex));\n              }\n              chart.update();\n            };\n    \n            // Color box\n            const boxSpan = document.createElement('span');\n            boxSpan.style.background = item.fillStyle;\n            boxSpan.style.borderColor = item.strokeStyle;\n            boxSpan.style.borderWidth = item.lineWidth + 'px';\n            boxSpan.style.display = 'inline-block';\n            boxSpan.style.flexShrink = 0;\n            boxSpan.style.height = '20px';\n            boxSpan.style.marginRight = '10px';\n            boxSpan.style.width = '20px';\n            boxSpan.style.borderRadius = '4px';\n    \n            // Text\n            const textContainer = document.createElement('p');\n            textContainer.style.color = item.fontColor;\n            textContainer.style.margin = 0;\n            textContainer.style.padding = 0;\n            textContainer.style.textDecoration = item.hidden ? 'line-through' : '';\n    \n            const text = document.createTextNode(item.text);\n            textContainer.appendChild(text);\n    \n            li.appendChild(boxSpan);\n            li.appendChild(textContainer);\n            ul.appendChild(li);\n          });\n        }\n      }\n    var initialChart = function() {\n        var ctx = document.getElementById('ti_doughnut_chart_demo');\n        var legend_container_id = ctx.getAttribute('data-legend-container');\n        \n        // Define colors\n        var primaryColor = TI_Util.getCssVariableValue('--bs-primary');\n        var dangerColor = TI_Util.getCssVariableValue('--bs-danger');\n        var successColor = TI_Util.getCssVariableValue('--bs-success');\n        var infoColor = TI_Util.getCssVariableValue('--bs-info');\n\n        // Define fonts\n        var fontFamily = TI_Util.getCssVariableValue('--bs-font-sans-serif');\n\n        // Chart labels\n        const labels = ['Đang liên hệ', 'Đang nộp hồ sơ', 'Sinh viên chính thức', 'Thí sinh từ chối'];\n\n        // Chart data\n        const data = {\n            labels: labels,\n            datasets: [{\n                label: 'DEMO CHART',\n                data: [\n                    10,\n                    20,\n                    30,\n                    40\n                ],\n                backgroundColor: [\n                    primaryColor, \n                    dangerColor,\n                    successColor,\n                    infoColor,\n                ],\n                hoverOffset: 4\n              }]\n        };\n\n        // Chart config\n        const config = {\n            type: 'doughnut',\n            data: data,\n            options: {\n                plugins: {\n                    title: {\n                        display: false,\n                    },\n                    legend: {\n                        position: 'right',\n                        labels: {\n                            font: {\n                                size: 18\n                            }\n                        }\n                    },\n                    // ChartJs labels plugins: see https://github.com/DavideViolante/chartjs-plugin-labels/\n                    labels: {\n                        render: 'percentage',\n                        fontColor: '#fff',\n                        fontSize: 18,\n                        textShadow: true,\n                        arc: false,\n                        precision: 0\n                    }\n                },\n                cutout: '30%',\n                responsive: true,\n                maintainAspectRatio: false,\n            },\n            defaults:{\n                global: {\n                    defaultFont: fontFamily\n                }\n            }\n        };\n\n        if (legend_container_id) {\n            config.options.plugins.legend.display = false;\n            config.options.plugins.htmlLegend = {\n              // ID of the container to put the legend in\n              containerID: legend_container_id,\n            };\n            if (!Array.isArray(config.plugins)) {\n              config.plugins = [];\n            }\n            config.plugins.push(htmlLegendPlugin);\n          }\n        // Init ChartJS -- for more info, please visit: https://www.chartjs.org/docs/latest/\n        return new Chart(ctx, config);\n    }\n    var initialChart9 = function() {\n      var ctx = document.getElementById('ti_doughnut_chart_demo_9');\n      var legend_container_id = ctx.getAttribute('data-legend-container');\n      \n      // Define colors\n      var primaryColor = TI_Util.getCssVariableValue('--bs-primary');\n      var dangerColor = TI_Util.getCssVariableValue('--bs-danger');\n      var successColor = TI_Util.getCssVariableValue('--bs-success');\n      var infoColor = TI_Util.getCssVariableValue('--bs-info');\n\n      // Define fonts\n      var fontFamily = TI_Util.getCssVariableValue('--bs-font-sans-serif');\n\n      // Chart labels\n      const labels = ['Đang liên hệ', 'Đang nộp hồ sơ', 'Sinh viên chính thức', 'Thí sinh từ chối'];\n\n      // Chart data\n      const data = {\n          labels: labels,\n          datasets: [{\n              label: 'DEMO CHART',\n              data: [\n                  10,\n                  20,\n                  30,\n                  40\n              ],\n              backgroundColor: [\n                  primaryColor, \n                  dangerColor,\n                  successColor,\n                  infoColor,\n              ],\n              hoverOffset: 4\n            }]\n      };\n\n      // Chart config\n      const config = {\n          type: 'doughnut',\n          data: data,\n          options: {\n              plugins: {\n                  title: {\n                      display: false,\n                  },\n                  legend: {\n                      position: 'right',\n                      labels: {\n                          font: {\n                              size: 18\n                          }\n                      }\n                  },\n                  // ChartJs labels plugins: see https://github.com/DavideViolante/chartjs-plugin-labels/\n                  labels: {\n                      render: 'percentage',\n                      fontColor: '#fff',\n                      fontSize: 18,\n                      textShadow: true,\n                      arc: false,\n                      precision: 0\n                  }\n              },\n              cutout: '30%',\n              responsive: true,\n              maintainAspectRatio: false,\n          },\n          defaults:{\n              global: {\n                  defaultFont: fontFamily\n              }\n          }\n      };\n\n      if (legend_container_id) {\n          config.options.plugins.legend.display = false;\n          config.options.plugins.htmlLegend = {\n            // ID of the container to put the legend in\n            containerID: legend_container_id,\n          };\n          if (!Array.isArray(config.plugins)) {\n            config.plugins = [];\n          }\n          config.plugins.push(htmlLegendPlugin);\n        }\n      // Init ChartJS -- for more info, please visit: https://www.chartjs.org/docs/latest/\n      return new Chart(ctx, config);\n  }\n\n    return {\n        init: function() {\n            initialChart();\n            initialChart9();\n        }\n    }\n}();\n// On document ready\nTI_Util.onDOMContentLoaded(function () {\n\tTI_KPI.init();\n});"],"file":"kpi.js"}
